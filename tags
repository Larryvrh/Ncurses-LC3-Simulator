!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
LC3getc	source/LC3.c	/^static void LC3getc(struct LC3 *simulator, WINDOW *window)$/;"	f	file:
LC3halt	source/LC3.c	/^static void LC3halt(WINDOW *window)$/;"	f	file:
LC3in	source/LC3.c	/^static void LC3in(struct LC3 *simulator, WINDOW *window)$/;"	f	file:
LC3out	source/LC3.c	/^static void LC3out(struct LC3 *simulator, WINDOW *window)$/;"	f	file:
LC3puts	source/LC3.c	/^static void LC3puts(struct LC3 *simulator, WINDOW *window)$/;"	f	file:
WORD_SIZE	source/Memory.c	/^#define WORD_SIZE /;"	d	file:
context	source/Machine.c	/^static WINDOW *status, *output, *context;$/;"	v	file:
create_context	source/Memory.c	/^void create_context(WINDOW *window, struct LC3 *simulator, int _selected,$/;"	f
error_usage	source/main.c	/^static void error_usage(char const *program_name)$/;"	f	file:
execute_next	source/LC3.c	/^void execute_next(struct LC3 *simulator, WINDOW *output)$/;"	f
file_name	source/Machine.c	/^static char *file_name = NULL;$/;"	v	file:
init_machine	source/Machine.c	/^static void init_machine(struct LC3 *simulator)$/;"	f	file:
init_state	source/Machine.c	/^static const struct LC3 init_state = {$/;"	v	typeref:struct:LC3	file:
main	source/main.c	/^int main(int argc, char **argv)$/;"	f
memory_attrs	source/Memory.c	/^static const unsigned int memory_attrs = A_REVERSE;$/;"	v	file:
memory_format	source/Memory.c	/^static const char *memory_format       = "0x%04hx\\t\\t0x%04hx";$/;"	v	file:
memory_output	source/Memory.c	/^uint16_t *memory_output	  = NULL;$/;"	v
move_context	source/Memory.c	/^void move_context(WINDOW *window, struct LC3 *simulator, enum DIRECTION direction)$/;"	f
output	source/Machine.c	/^static WINDOW *status, *output, *context;$/;"	v	file:
output_height	source/Memory.c	/^uint16_t output_height	  = 0;$/;"	v
populate_memory	source/Memory.c	/^void populate_memory(struct LC3 *simulator, const char *file_name)$/;"	f
popup_window	source/Machine.c	/^static void popup_window(const char *message)$/;"	f	file:
print_state	source/LC3.c	/^void print_state(struct LC3 *simulator, WINDOW *window)$/;"	f
print_view	source/Machine.c	/^static void print_view(enum STATE *currentState)$/;"	f	file:
read_error	source/Error.c	/^void read_error()$/;"	f
redraw	source/Memory.c	/^static void redraw(WINDOW *window)$/;"	f	file:
run_machine	source/Machine.c	/^void run_machine(struct LC3 *simulator)$/;"	f
run_main_ui	source/Machine.c	/^static bool run_main_ui(WINDOW *status, enum STATE *currentState)$/;"	f	file:
selected	source/Memory.c	/^int selected = 0;$/;"	v
selected_address	source/Memory.c	/^uint16_t selected_address = 0;$/;"	v
setcc	source/LC3.c	/^static void setcc(uint16_t *last_result, unsigned char *CC)$/;"	f	file:
simulate	source/Machine.c	/^static bool simulate(WINDOW *output, WINDOW *status,$/;"	f	file:
start_machine	source/Machine.c	/^void start_machine(const char *file)$/;"	f
status	source/Machine.c	/^static WINDOW *status, *output, *context;$/;"	v	file:
unable_to_open_file	source/Error.c	/^void unable_to_open_file(char const *file)$/;"	f
usage	source/main.c	/^static void usage(char const *program_name)$/;"	f	file:
usage_string	source/main.c	/^const char usage_string[] =$/;"	v
view_memory	source/Machine.c	/^static bool view_memory(WINDOW *window, struct LC3 *simulator,$/;"	f	file:
